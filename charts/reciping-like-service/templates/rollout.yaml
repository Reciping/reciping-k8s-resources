apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "like-service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "like-service.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "like-service.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "like-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "{{ .Values.service.port }}"
    spec:
      containers:
        - name: like-service
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          args:
            - "--spring.config.additional-location=optional:classpath:/,optional:file:/config/"
            - "--spring.profiles.active=prod"
          env:
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "like-service.fullname" . }}-secret
                  key: jwt-secret-key
          volumeMounts:
            - name: config-volume
              mountPath: /config
              readOnly: true
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "like-service.fullname" . }}-config
            items:
              - key: application-prod.yaml
                path: application-prod.yaml
  strategy:
    canary:
      steps:
        - setWeight: 25
        - pause: { duration: 30s }
        - setWeight: 75
        - pause: { duration: 60s }
        - setWeight: 100
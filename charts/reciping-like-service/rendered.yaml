---
# Source: reciping-like-service/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: release-name-reciping-like-service-secret
  labels:
    app.kubernetes.io/name: reciping-like-service
    app.kubernetes.io/instance: release-name
type: Opaque
stringData:
  jwt-secret-key: "m5M/3YqO8kB/32Xu0/AlU8TKtsKhXHXuRAm5XGvx786uTj3+BpN1RAA65tJvbOg1pZuVG+TqMyFk2XRL3rU7HA=="
  docdb-uri: "mongodb://recipingadmin:reciping123@reciping-docdb.cluster-cfmw20sgimj0.ap-northeast-2.docdb.amazonaws.com:27017/like_service_db?tls=true&retryWrites=false&readPreference=secondaryPreferred&replicaSet=rs0"
---
# Source: reciping-like-service/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-reciping-like-service-config
  labels:
    app.kubernetes.io/name: reciping-like-service
    app.kubernetes.io/instance: release-name
data:
  application-prod.yaml: |-
    server:
      port: 8082

    spring:
      application:
        name: reciping-like-service-BE
      data:
        mongodb:
          # 환경변수로 주입되는 DocumentDB 접속 URI 사용
          uri: ${DOCDB_URI}
          database: like_service_db
          auto-index-creation: true

      jackson:
        serialization:
          indent_output: true

    jwt:
      secret:
        key: ${JWT_SECRET_KEY}

    management:
      endpoints:
        web:
          exposure:
            include: health,prometheus

    endpoint:
      health:
        show-details: always
---
# Source: reciping-like-service/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-reciping-like-service
  labels:
    app.kubernetes.io/name: reciping-like-service
    app.kubernetes.io/instance: release-name
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: reciping-like-service
  ports:
    - name: http
      port: 8082
      targetPort: 8082
---
# Source: reciping-like-service/templates/rollout.yaml
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: release-name-reciping-like-service
  labels:
    app.kubernetes.io/name: reciping-like-service
    app.kubernetes.io/instance: release-name
spec:
  replicas: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: reciping-like-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reciping-like-service
        app.kubernetes.io/instance: release-name
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8082"
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: like-service
          image: "892117097999.dkr.ecr.ap-northeast-2.amazonaws.com/reciping-like-service:v1.0.7"
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 8082
              name: http
          args:
            - "--spring.config.additional-location=optional:classpath:/,optional:file:/config/"
            - "--spring.profiles.active=prod"
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - sleep 20
          env:
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: release-name-reciping-like-service-secret
                  key: jwt-secret-key
            - name: DOCDB_URI
              valueFrom:
                secretKeyRef:
                  name: release-name-reciping-like-service-secret
                  key: docdb-uri
          volumeMounts:
            - name: config-volume
              mountPath: /config
              readOnly: true
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 200m
              memory: 256Mi
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 15
            periodSeconds: 10
      volumes:
        - name: config-volume
          configMap:
            name: release-name-reciping-like-service-config
            items:
              - key: application-prod.yaml
                path: application-prod.yaml
  strategy:
    canary:
      steps:
        - setWeight: 25
        - pause: { duration: 30s }
        - setWeight: 75
        - pause: { duration: 60s }
        - setWeight: 100
---
# Source: reciping-like-service/templates/podmonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: release-name-reciping-like-service
  labels:
    app.kubernetes.io/name: reciping-like-service
    app.kubernetes.io/instance: release-name
spec:
  namespaceSelector:
    matchNames:
      - default
  selector:
    matchLabels:
      app.kubernetes.io/name: reciping-like-service
  podMetricsEndpoints:
    - path: /actuator/prometheus
      port: http
      interval: 30s
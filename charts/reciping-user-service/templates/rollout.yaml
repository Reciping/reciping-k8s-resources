apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "reciping-user-service.fullname" . }}
  namespace: reciping
  labels:
    {{- include "reciping-user-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "reciping-user-service.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "reciping-user-service.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.metrics.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/path: {{ .Values.metrics.prometheus.path | quote }}
        prometheus.io/port: {{ .Values.metrics.prometheus.port | quote }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: http
          args:
            - "--spring.config.additional-location=file:/config/"
            - "--spring.profiles.active=prod"
          env:
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: reciping-user-secret
                  key: jwt_secret_key
            - name: DB_URL
              valueFrom:
                secretKeyRef:
                  name: reciping-user-secret
                  key: db_url
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: reciping-user-secret
                  key: db_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: reciping-user-secret
                  key: db_password
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 30
          volumeMounts:
            - name: config-volume
              mountPath: /config
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "reciping-user-service.fullname" . }}-config

  strategy:
    canary:
      steps:
        - setWeight: 30
        - pause: { duration: 30s }
        - setWeight: 60
        - pause: { duration: 30s }
        - setWeight: 100

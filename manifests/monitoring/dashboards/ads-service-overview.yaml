apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-ads-service-overview
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
  annotations:
    grafana_folder: "Teams"
data:
  ads-service-overview.json: |
    {
      "schemaVersion": 39,
      "version": 1,
      "title": "Ads Service Overview",
      "tags": ["team:ads"],
      "time": { "from": "now-6h", "to": "now" },
      "templating": {
        "list": [
          {
            "name": "team",
            "type": "constant",
            "label": "team",
            "query": "ads",
            "hide": 2
          },
          {
            "name": "service",
            "type": "query",
            "datasource": {"type": "prometheus", "uid": "prometheus"},
            "refresh": 1,
            "query": "label_values(up{namespace=\\"reciping\\",reciping_team=\\"$team\\"}, reciping_service)",
            "includeAll": true,
            "multi": true,
            "current": {"text": "All", "value": ["$__all"]}
          }
        ]
      },
      "panels": [
        {"type": "row", "title": "Traffic & Errors", "collapsed": false, "gridPos": {"h":1,"w":24,"x":0,"y":0}},
        {
          "type": "timeseries",
          "title": "RPS (5m rate)",
          "gridPos": {"h":8,"w":12,"x":0,"y":1},
          "targets": [
            {"expr": "sum by (reciping_service) (rate(http_server_requests_seconds_count{namespace=\\"reciping\\",reciping_team=\\"$team\\",reciping_service=~\\"$service\\",uri!~\\"/actuator/.*\\"}[5m]))", "legendFormat": "{{reciping_service}}"}
          ]
        },
        {
          "type": "timeseries",
          "title": "Error Rate (5xx %)",
          "gridPos": {"h":8,"w":12,"x":12,"y":1},
          "targets": [
            {"expr": "100 * ( sum by (reciping_service) (rate(http_server_requests_seconds_count{namespace=\\"reciping\\",status=~\\"5..\\",reciping_team=\\"$team\\",reciping_service=~\\"$service\\",uri!~\\"/actuator/.*\\"}[5m])) / sum by (reciping_service) (rate(http_server_requests_seconds_count{namespace=\\"reciping\\",reciping_team=\\"$team\\",reciping_service=~\\"$service\\",uri!~\\"/actuator/.*\\"}[5m])) )", "legendFormat": "{{reciping_service}}"}
          ]
        },
        {"type": "row", "title": "Latency & JVM", "collapsed": false, "gridPos": {"h":1,"w":24,"x":0,"y":9}},
        {
          "type": "timeseries",
          "title": "HTTP P95 (s)",
          "gridPos": {"h":8,"w":12,"x":0,"y":10},
          "targets": [
            {"expr": "histogram_quantile(0.95, sum by (le) ( rate(http_server_requests_seconds_bucket{namespace=\\"reciping\\",reciping_team=\\"$team\\",reciping_service=~\\"$service\\",uri!~\\"/actuator/.*\\"}[5m]) ))", "legendFormat": "P95"}
          ]
        },
        {
          "type": "timeseries",
          "title": "JVM Heap Usage (%)",
          "gridPos": {"h":8,"w":12,"x":12,"y":10},
          "targets": [
            {"expr": "100 * max by (reciping_service) ( jvm_memory_used_bytes{area=\\"heap\\",reciping_team=\\"$team\\",reciping_service=~\\"$service\\"} / jvm_memory_max_bytes{area=\\"heap\\",reciping_team=\\"$team\\",reciping_service=~\\"$service\\"} )", "legendFormat": "{{reciping_service}}"}
          ]
        },
        {"type": "row", "title": "Container Restarts", "collapsed": false, "gridPos": {"h":1,"w":24,"x":0,"y":18}},
        {
          "type": "timeseries",
          "title": "Restarts (5m)",
          "gridPos": {"h":8,"w":24,"x":0,"y":19},
          "targets": [
            {"expr": "sum by (pod) ( (increase(kube_pod_container_status_restarts_total{namespace=\\"reciping\\"}[5m]) > 0) and on (namespace,pod) group_left(reciping_team,reciping_service) max by (namespace,pod,reciping_team,reciping_service) ( up{namespace=\\"reciping\\",reciping_team=\\"$team\\",reciping_service=~\\"$service\\"} ) )", "legendFormat": "{{pod}}"}
          ]
        }
      ]
    }

